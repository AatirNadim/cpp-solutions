in case of problems built around real world scenarios, indicating the fact that any prior information regarding the arrangement of the problemset is not available, work your way down the verbose approach, to any assimilation in the middle which can be optimized. 

harbouring the belief that a certain problem can only be decrypted with a common method, already been accounted for, leads to complacency in divising new methods of approach and logical analysis.

there are numerous ways to arrive to the same conclusion. unintentionally, opting the relatively ominous way, does lead to a maze at times, yet it nothing to fret over.

something as barouque as native dsa, promises no establishment to the veteran solver either. sometimes, it is necessary to wander about for some help.

an unsolved problem does not illustrate an inexperienced fellow, everyone would do well to remember it.

success in solving the problem alone does in no way signal the mindset of the coder. two different people can be differentiated on account of the way they code.

solving the problem beautifully is not equivalent to solving the problem quickly.

more often than not, the best solutions are quite concise and seem harmless to the reader.

adopting a somewhat wrong approach is entirely normal and does lead to extra slugged hours.
there is sometimes no way to avoid it and the concern should be to work our way past this.

always search for the focal point in case of swapping or moving the elements and the process is to be validated according to certain conditions. start updation of elements and subsequent validation from the focal point and halt in case of impossible condition or end of elements.

always, always, always, type convert everything in the expression even if casting to a bigger data type. 
type convert beforehand, ki baad me there is no issue regarding range limit.

dont always think in terms of node, try to think in terms of edges

for the priority_queue and sorting and especially for those two together, try to have different sorted arrangements if one does not work out

try to think in terms of all the varying parameters